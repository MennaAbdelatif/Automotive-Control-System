import React, { useEffect, useState } from "react";
import { Card, Row, Col, Table, Spin } from "antd";
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";
import axios from "axios";

// Define TypeScript interfaces
interface Metric {
  totalAccidents: number;
  activeCars: number;
  alertsSent: number;
}

interface Accident {
  id: number;
  carId: string;
  time: string;
  location: string;
}

interface ChartData {
  time: string;
  accidents: number;
}

function Dashboard() {
  const [metrics, setMetrics] = useState<Metric>({ totalAccidents: 0, activeCars: 0, alertsSent: 0 });
  const [accidents, setAccidents] = useState<Accident[]>([]);
  const [chartData, setChartData] = useState<ChartData[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const metricsRes = await axios.get<Metric>("http://localhost:5000/api/metrics");
        const accidentsRes = await axios.get<Accident[]>("http://localhost:5000/api/accidents");
        const chartRes = await axios.get<ChartData[]>("http://localhost:5000/api/chart");

        setMetrics(metricsRes.data);
        setAccidents(accidentsRes.data);
        setChartData(chartRes.data);
      } catch (err) {
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    fetchData();

    const interval = setInterval(fetchData, 10000);
    return () => clearInterval(interval);
  }, []);

  const columns = [
    { title: "Car ID", dataIndex: "carId", key: "carId" },
    { title: "Accident Time", dataIndex: "time", key: "time" },
    { title: "Location", dataIndex: "location", key: "location" },
  ];

  if (loading) return <Spin size="large" style={{ marginTop: 100 }} />;

  return (
    <div style={{ padding: 20 }}>
      <Row gutter={16}>
        <Col span={8}>
          <Card title="Total Accidents">{metrics.totalAccidents}</Card>
        </Col>
        <Col span={8}>
          <Card title="Active Cars">{metrics.activeCars}</Card>
        </Col>
        <Col span={8}>
          <Card title="Alerts Sent">{metrics.alertsSent}</Card>
        </Col>
      </Row>

      <Card title="Accident Trends" style={{ marginTop: 20 }}>
        <ResponsiveContainer width="100%" height={300}>
          <LineChart data={chartData}>
            <XAxis dataKey="time" />
            <YAxis />
            <Tooltip />
            <Line type="monotone" dataKey="accidents" stroke="#8884d8" />
          </LineChart>
        </ResponsiveContainer>
      </Card>

      <Card title="Recent Accidents" style={{ marginTop: 20 }}>
        <Table columns={columns} dataSource={accidents} rowKey="id" />
      </Card>
    </div>
  );
}

export default Dashboard;
