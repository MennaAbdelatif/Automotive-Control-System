import React, { useEffect, useState, useRef } from "react";
import { View, Text, StyleSheet, ScrollView, ActivityIndicator } from "react-native";
import axios from "axios";
import MapView, { Marker, Region } from "react-native-maps";

export default function App() {
  const [metrics, setMetrics] = useState({ totalAccidents: 0, alertsSent: 0 });
  const [location, setLocation] = useState({ latitude: 30.12345, longitude: 31.54321 });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const mapRef = useRef<MapView>(null);

  const BASE_URL = "http://192.168.2";

  useEffect(() => {
    const fetchData = async () => {
      try {
        const metricsRes = await axios.get(`${BASE_URL}/api/metrics`);
        const locationRes = await axios.get(`${BASE_URL}/api/location`);

        setMetrics({
          totalAccidents: metricsRes.data.totalAccidents,
          alertsSent: metricsRes.data.alertsSent,
        });

        const newLocation = {
          latitude: Number(locationRes.data.latitude),
          longitude: Number(locationRes.data.longitude),
        };
        setLocation(newLocation);

        if (mapRef.current) {
          mapRef.current.animateToRegion({
            ...newLocation,
            latitudeDelta: 0.01,
            longitudeDelta: 0.01,
          } as Region, 1000);
        }

        setError("");
      } catch (err: any) {
        console.error(err);
        setError("Cannot fetch data. Check network or backend.");
      } finally {
        setLoading(false);
      }
    };

    fetchData();
    const interval = setInterval(fetchData, 5000); 
    return () => clearInterval(interval);
  }, []);

  if (loading) {
    return (
      <View style={styles.center}>
        <ActivityIndicator size="large" color="#6200ee" />
        <Text style={{ color: "#fff" }}>Loading dashboard...</Text>
      </View>
    );
  }

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <Text style={styles.title}> IoT Accident Dashboard</Text>

      {error ? <Text style={styles.error}>{error}</Text> : null}

      <View style={styles.card}>
        <Text style={styles.cardTitle}>Total Accidents</Text>
        <Text style={styles.cardValue}>{metrics.totalAccidents}</Text>
      </View>

      <View style={styles.card}>
        <Text style={styles.cardTitle}>Alerts Sent</Text>
        <Text style={styles.cardValue}>{metrics.alertsSent}</Text>
      </View>

      <View style={styles.card}>
        <Text style={styles.cardTitle}>Live Location</Text>
        <MapView
          ref={mapRef}
          style={styles.map}
          initialRegion={{
            latitude: location.latitude,
            longitude: location.longitude,
            latitudeDelta: 0.01,
            longitudeDelta: 0.01,
          }}
        >
          <Marker coordinate={location} />
        </MapView>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    padding: 15,
    alignItems: "center",
    backgroundColor: "#121212",
  },
  title: {
    color: "#fff",
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  card: {
    backgroundColor: "#1E1E1E",
    padding: 20,
    borderRadius: 12,
    width: "90%",
    alignItems: "center",
    marginBottom: 15,
    shadowColor: "#6200ee",
    shadowOpacity: 0.3,
    shadowRadius: 5,
  },
  cardTitle: {
    color: "#bbb",
    fontSize: 16,
    marginBottom: 10,
  },
  cardValue: {
    color: "#fff",
    fontSize: 20,
    fontWeight: "bold",
    marginBottom: 10,
  },
  map: {
    width: "100%",
    height: 200,
    borderRadius: 12,
  },
  center: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  error: {
    color: "red",
    marginBottom: 10,
  },
});
